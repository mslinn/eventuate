akka {
  actor {
    // See http://doc.akka.io/docs/akka/2.4/scala/serialization.html
    serialize-creators = on
    serialize-messages = on

    // See https://rbmhtechnology.github.io/eventuate/reference/event-sourcing.html#custom-serialization
    serializers {
      // See http://doc.akka.io/docs/akka/2.4/scala/serialization.html
      exampleScalaSerializer               = "sapi.ExampleScalaSerializer"
      pingPongScalaSerializer              = "sapi.PingPongScalaSerializer"
      conditionalScalaSerializer           = "sapi.ConditionalScalaSerializer"
      interactiveResoultionScalaSerializer = "sapi.InteractiveResolutionScalaSerializer"

      // See http://doc.akka.io/docs/akka/current/java/serialization.html (not implemented)
      //exampleJavaSerializer               = "japi.ExampleJavaSerializer"
      //pingPongJavaSerializer              = "japi.PingPongJavaSerializer"
      //conditionalJavaSerializer           = "japi.ConditionalJavaSerializer"
      //interactiveResoultionJavaSerializer = "japi.InteractiveResolutionJavaSerializer"
    }

    serialization-bindings {
      "sapi.Print"         = exampleScalaSerializer
      "sapi.Append"        = exampleScalaSerializer
      "sapi.AppendSuccess" = exampleScalaSerializer
      "sapi.AppendFailure" = exampleScalaSerializer
      "sapi.Appended"      = exampleScalaSerializer

      "sapi.Ping"          = pingPongScalaSerializer
      "sapi.Pong"          = pingPongScalaSerializer

      "sapi.EventsourcedViews$.Resolved"             = conditionalScalaSerializer
      "sapi.EventsourcedViews$.GetAppendCountReply"  = conditionalScalaSerializer
      "sapi.EventsourcedViews$.GetResolveCount"      = conditionalScalaSerializer
      "sapi.EventsourcedViews$.GetResolveCountReply" = conditionalScalaSerializer

      "sapi.InteractiveResolveExample$Append"         = interactiveResoultionScalaSerializer
      "sapi.InteractiveResolveExample$AppendRejected" = interactiveResoultionScalaSerializer
      "sapi.InteractiveResolveExample$Resolve"        = interactiveResoultionScalaSerializer
      "sapi.InteractiveResolveExample$Resolved"       = interactiveResoultionScalaSerializer

//      "japi.Messages.Print"                      = exampleJavaSerializer
//      "japi.Messages.Append"                     = exampleJavaSerializer
//      "japi.Messages.AppendSuccessWithTimestamp" = exampleJavaSerializer
//      "japi.Messages.AppendFailure"              = exampleJavaSerializer
//      "japi.Messages.Appended"                   = exampleJavaSerializer

//      "japi.Ping" = pingPongJavaSerializer
//      "japi.Pong" = pingPongJavaSerializer

//      "japi.EventsourcedViews.Resolved"             = conditionalScalaSerializer
//      "japi.EventsourcedViews.GetAppendCountReply"  = conditionalScalaSerializer
//      "japi.EventsourcedViews.GetResolveCount"      = conditionalScalaSerializer
//      "japi.EventsourcedViews.GetResolveCountReply" = conditionalScalaSerializer

//      "japi.InteractiveResolveExample.Append"         = interactiveResoultionJavaSerializer
//      "japi.InteractiveResolveExample.AppendRejected" = interactiveResoultionJavaSerializer
//      "japi.InteractiveResolveExample.Resolve"        = interactiveResoultionJavaSerializer
//      "japi.InteractiveResolveExample.Resolved"       = interactiveResoultionJavaSerializer    }
  }

  log-dead-letters = off

  log-dead-letters-during-shutdown = off

  persistence {
    journal {
      plugin = "akka.persistence.journal.leveldb"
      leveldb.native = off
    }
  }
}
